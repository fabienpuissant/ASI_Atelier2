package io.javabrains.cardmarket.controllers;

import java.io.IOException;
import java.util.List;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import io.javabrains.cardmarket.models.CardEntity;
import io.javabrains.cardmarket.models.CardFactory;

@RestController
public class MarketRestController {
	
	private CardFactory cardFactory = new CardFactory();
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private CardService cardService;
	
	/**
	 * Get all cards that user does not have
	 * @param id
	 * @return String all the card that user can buy
	 * @throws IOException
	 */
	@GetMapping("UserService/user/BuyCards/{id}")
	public String getBuyCards(@PathVariable String id) throws IOException {
		Set<CardEntity> userCards = userService.getUserById(id).getCards();
		List<CardEntity> allCards = cardService.getAll();
		String buyCards = "";
		for(CardEntity card: allCards) {
			if(!userCards.contains(card)) {
				buyCards += String.valueOf(card.getId()) + "/";
			}
		}
		return this.CardStringConversion(buyCards);
	}
	
	
	/**
	 * Erase the last character of the string
	 * @param String
	 * @return String
	 */
	private String CardStringConversion(String str) {
	        return str = str.substring(0, str.length() - 1);
	}
}
