package io.javabrains.cardmarket.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;
import java.util.Random;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;


import io.javabrains.cardmarket.models.UserEntity;
import io.javabrains.cardmarket.utils.Tools;

@RestController
public class UserRestController {
	
	@Autowired
	private UserService userService;
	
	@GetMapping("UserService/user/{name}")
	public UserEntity getUser(@PathVariable String name) {
		return userService.getUserByName(name);
	}
	
	@GetMapping("UserService/user/{name}/{pswd}")
	public String getUser(@PathVariable String name, @PathVariable String pswd){
		UserEntity user = userService.getUserByName(name);
		if(user == null) {
			return "";
		}
		else if(!user.getPassword().contentEquals(pswd)) {
			return "";
		}
		return Tools.toJsonString(user);
	}
	
	
	@PostMapping(value="UserService/addUser", consumes=MediaType.APPLICATION_JSON_VALUE)
	public boolean addUser(@RequestBody UserEntity user) throws IOException {
		int cardnumber = this.getCardNumber();
		System.out.println(cardnumber);
		Random r = new Random();
		String cards = "";
		for(int i = 0; i < cardnumber ; i++) {
			
			r.nextInt(cardnumber + 1);
			cards += "r/";
		}
		user.setCards(this.CardStringConversion(cards));
		return userService.addUser(user);
	}
	
	private int getCardNumber() throws IOException {
		URL obj = new URL("http://localhost:8080/CardService/card/number");
        HttpURLConnection httpURLConnection = (HttpURLConnection) obj.openConnection();
        BufferedReader in = new BufferedReader(
                new InputStreamReader(httpURLConnection.getInputStream()));
                String inputLine;
                StringBuffer response = new StringBuffer();
                 while ((inputLine = in.readLine()) != null) {
                   response.append(inputLine);
                 } in .close();
        return Integer.parseInt(response.toString());

	}
	
	private String CardStringConversion(String str) {
	    if (str != null && str.length() > 0 && str.charAt(str.length() - 1) == 'x') {
	        str = str.substring(0, str.length() - 1);
	    }
	    return str;
	}

}
